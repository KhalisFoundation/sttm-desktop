#!/usr/bin/env node

/* eslint-disable import/no-extraneous-dependencies, no-console */
const git = require('simple-git');
const util = require('util');
const exec = util.promisify(require('child_process').exec);
const fs = require('fs');
const path = require('path');

const {
  argv: { branch, platform, token },
} = require('yargs');

const checkVersion = require('./check-version');

const release = async () => {
  let track = '';
  if (branch === 'dev') track = 'alpha';
  else if (branch === 'master') track = 'beta';
  else if (branch === 'release') track = '';
  else track = branch;

  console.log(`Platform: ${platform}`);
  console.log(`Branch: ${branch}`);
  if (track) {
    console.log(`Prerelease Track: ${track}`);
  }

  // Get all tags, sort in desc order, and get latest from current track
  const gitTags = await git().tags();
  const gitTag = gitTags.all.reverse().find((tag) => tag.indexOf(track) > -1);
  console.log(`Last Git tag: ${gitTag}`);

  // Get a new release version and update package.json
  const releaseVersion = checkVersion(branch, gitTag);
  console.log(`New release version: ${releaseVersion}`);

  // Update package.json with new version and track-specific settings
  const pkgPath = path.join(__dirname, '..', 'package.json');
  const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
  pkg.version = releaseVersion;
  if (track) {
    pkg.productName = `${pkg.productName} ${track.charAt(0).toUpperCase()}${track.slice(1)}`;
    pkg.build.mac.icon = `assets/STTM-${track}.icns`;
    pkg.build.win.icon = `assets/STTM-${track}.ico`;
  }
  fs.writeFileSync(pkgPath, JSON.stringify(pkg, null, 2));

  console.log('Building application...');
  try {
    const { stdout, stderr } = await exec(`npm run dist:${platform}`);
    console.log('stdout:', stdout);
    console.log('stderr:', stderr);
  } catch (err) {
    console.error(err);
    process.exit(1);
  }

  // Create and push git tag
  console.log('Creating git tag...');
  await git().addTag(releaseVersion);
  await git().pushTags(`https://${token}@github.com/khalisfoundation/sttm-desktop.git`);
};

if (branch === 'release' || branch === 'master' || branch === 'dev' || branch === 'github-action') {
  release();
}
