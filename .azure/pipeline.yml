# Trigger on commits to master and tags v*
trigger:
  branches:
    include:
      - dev
      - release
      - master
  tags:
    include:
      - v*  

pr:
  branches:
    include:
      - dev
      - release
      - master

# Use the latest macOS hosted agent
pool:
  vmImage: 'macos-latest'  

steps:
# 1. Download and install Apple code-signing certificate (P12)  
- task: DownloadSecureFile@1                    # download from Secure Files library :contentReference[oaicite:4]{index=4}
  name: appleCert
  inputs:
    secureFile: 'certificate.p12'         # the name you gave when uploading the P12

- task: InstallAppleCertificate@2               # install into temp keychain :contentReference[oaicite:5]{index=5}
  inputs:
    certSecureFile: 'certificate.p12'
    certPwd: '$(CSC_KEY_PASSWORD)'                  # store your P12 password as a pipeline secret

# 2. Install Node.js
- task: NodeTool@0                              # get Node.js on PATH :contentReference[oaicite:6]{index=6}
  inputs:
    versionSpec: '18.x'                         # match your local dev version

# 3. Install dependencies and build
- script: |
    npm ci                                     # clean install dependencies
    npm run build                              # runs build-css & build-js as per your package.json
  displayName: 'npm install & build'

# 4. Package macOS build with electron-builder
- script: |
    npm run pack:macArm                           # runs electron-builder --mac --arm64 as per your scripts
  displayName: 'Package macOS (x64 & arm64)'
  env:
    CSC_KEYCHAIN: 'temp'                       # tell electron-builder which keychain to use
    CSC_IDENTITY_AUTO_DISCOVERY: 'false'       # optional: skip delay in identity lookup
    # electron-builder picks up the cert from the temp keychain

# 5. Publish the dmg and zip from the 'builds' folder
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'builds'                       # matches "directories.output" in your build config
    artifact: 'macOS'
    publishLocation: 'pipeline'
